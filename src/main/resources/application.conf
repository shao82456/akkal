# 通过 -Xbootclasspath/a: 将文件添加到 classpath 进行读取
# 而不是通过 ConfigFactory.parserFile() 的方式
# 后者在读取 system.dispatchers.lookup("blocking-dispatcher")
# 的时候会有问题

# Akka HTTP version, checked against the runtime version of Akka HTTP.
# Loaded from generated conf file.
include "akka-http-version"

service {
  host = "0.0.0.0"
  port = 8837
  main-class = "JobMonitorServer"

  # timeout 时间默认为 5s
  timeout = 10 s
  # 是否开启跨域, 默认为 false
  enable-cors = true
  # 统一前缀, 不需要设置为 "" 或者不设置该参数
  path-prefix = ""
  # 是否开启缓存
  enable-cache = false

  routes = [
    routes.KylinJobMonitorRoute
  ]
}

// 数据返回的格式
result-format {
  // 小数点后保留几位
  precision = 2
}

database {
  kylin {
    url = "192.168.33.114"
    port = 7070
    username = ADMIN
    password = KYLIN
  }

  hive {
    new_spark {
      url = "jdbc:hive2://192.168.33.112:10000/;auth=none"
      configs {
        user = "homework"
        "hiveconf:hive.execution.engine" = "mr"
        "hiveconf:mapreduce.job.queuename" = "kylin_offline"
        "hiveconf:mapreduce.input.fileinputformat.input.dir.recursive" = "true"
      }
    }
  }

  mysql-test {
    url = "jdbc:mysql://localhost:3306/sakila?useUnicode=true&character=UTF8&useSSL=false"
    connectionPool = "HikariCP"
    driver = "com.mysql.jdbc.Driver"
    user = sakura
    password = test
    numThreads = 3
  }

  # mysql -h 192.168.12.29 -P8090 -utest -ptest -D monitor -A
  mysql-prod {
    url = "jdbc:mysql://192.168.32.184:3306/monitor?useUnicode=true&characterEncoding=UTF-8&useSSL=false"
    driver = "com.mysql.jdbc.Driver"
    user = "monitor"
    password = "2ghlMcl_1hblSqt"
  }
}

# blocking 操作使用的 dispatcher 和正常处理 dispatcher 分开
blocking-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    fixed-pool-size = 32
  }
  throughput = 1
}


akka {
  # 在 Idea 中测试的时候, 把下面的注释掉
//  loggers = ["akka.event.slf4j.Slf4jLogger"]
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "DEBUG"
}

akka.http {

  # 缓存设置
  caching {
    initial-capacity = 25
    max-capacity = 50
    time-to-live = 20s
    time-to-idle = 10s
  }

  server {
//    server-header = akka-http/${akka.http.version}

    # The time after which an idle connection will be automatically closed.
    idle-timeout = 60 s

    # Defines the defaul time period within which the application has to produce
    # an HttpResponse for any given HttpRequest it received
    # The timeout begins to run when the *end* of the request has been received,
    # so even potentially long uploads can have a short timeout.
    request-timeout = 20 s

    # The time peroid within which the TCP binding process musb be completed.
    bind-timeout = 1s

  }

  parsing {
    # The limits for the various parts of the HTTP message parser
    max-uri-length             = 2k
    max-method-length          = 16m
    max-response-reason-length = 64
    max-header-name-length     = 64
    max-header-value-length    = 8k
    max-header-count           = 64
    max-chunk-ext-length       = 256
    max-chunk-size             = 1m

    # Default maximum content length which should not be execeeded by incoming request entities
    # Can be changed at runtime (to a higher or lower value) via the `HttpEntity::withSizeLimit` method.
    max-content-length = 8m

    # The maximum number of bytess to allow when reading the entire entity into memory with `toStrict`
    max-to-strict-bytes = 8m

    # Sets the strictness mode for parsing request target URIs.
    # The following values are defined:
    #
    # `strict`: RFC3986-compliant URIs are required,
    #     a 400 response is triggered on violations
    #
    # `relaxed`: all visible 7-Bit ASCII chars are allowed
    #
    uri-parsing-mode = strict
  }
}
